rootProject.name = "cms-dq-reporting-tool-lib"

include("cms-dq-reporting-tool-api")
include("cms-dq-reporting-tool-worker")

pluginManagement {
    plugins {
        id("org.springframework.boot") version "3.2.4" // pls remember to update also spring-boot version in versionCatalogs
        id("com.gorylenko.gradle-git-properties") version "2.3.2"
        id("com.github.edeandrea.xjc-generation") version "1.6"
    }
}

dependencyResolutionManagement {
    versionCatalogs {
        create("libs") {
            version("apache-commons", "3.12")
            version("assertj-vavr", "0.4.2")
            version("klaxon", "5.6")
            version("logbook", "2.14.0")
            version("lombok", "1.18.22")
            version("okhttp", "4.9.1")
            version("json-path", "2.4.0")
            version("jsoup", "1.15.1")
            version("speedkha-mocker", "1.1.8")
            version("spring", "6.1.6")
            version("spring-boot", "3.2.4") // pls remember to update also spring boot plugin version in pluginManagement
            version("testcontainers", "1.19.0")
            version("viacom-arcops", "0.3.16")
            version("viacom-aemops", "3.0.1")
            version("vavr", "0.9.1")
            version("modelmapper", "3.0.0")
            version("mysql-connector","9.0.0")
            version("hibernatetypes", "2.14.0")
            version("openapi-ui", "1.6.12")
            version("xmlunit", "2.8.4")
            version("jaxbVersion", "2.3.1")
            version("guava", "31.1-jre")
            version("everit-schema-validator", "1.5.1")
            version("commons-io", "2.11.0")
            version("jupiter-api", "5.9.0")
            version("cmsidlookup", "0.1.13")
            version("cmsUcaVersion", "0.1.3")
            version("org.json", "20160212")
            version("underscore", "1.54")
            version("apache-poi", "5.2.3")
            version("commons-cli", "1.5.0")
            version("sl4j-api", "2.0.13")
            version("casljplibVersion", "1.2")

            // when no version is defined we are relying on spring-boot BOM
            library("apache-commons-lang3", "org.apache.commons", "commons-lang3").versionRef("apache-commons")
            library("assertj-core", "org.assertj", "assertj-core").withoutVersion()
            library("assertj-vavr", "org.assertj", "assertj-vavr").versionRef("assertj-vavr")
            library("awaitility", "org.awaitility", "awaitility").withoutVersion()
            library("ehcache", "org.ehcache", "ehcache").withoutVersion()
            library("guava", "com.google.guava", "guava").versionRef("guava")
            library("hibernatetypes", "com.vladmihalcea", "hibernate-types-52").versionRef("hibernatetypes")
            library("jackson-annotations", "com.fasterxml.jackson.core", "jackson-annotations").withoutVersion()
            library("jackson-core", "com.fasterxml.jackson.core", "jackson-core").withoutVersion()
            library("jackson-databind", "com.fasterxml.jackson.core", "jackson-databind").withoutVersion()
            library("jackson-jsr310", "com.fasterxml.jackson.datatype", "jackson-datatype-jsr310").withoutVersion()
            library("jackson-module-jsonSchema", "com.fasterxml.jackson.module", "jackson-module-jsonSchema").withoutVersion()
            library("json-path", "com.jayway.jsonpath", "json-path").versionRef("json-path")
            library("everit-json-schema", "org.everit.json", "org.everit.json.schema").versionRef("everit-schema-validator")
            library("jakarta-api", "jakarta.validation", "jakarta.validation-api").withoutVersion()
            library("jaxb-api", "javax.xml.bind", "jaxb-api").versionRef("jaxbVersion")
            library("jsoup", "org.jsoup", "jsoup").versionRef("jsoup")
            library("jupiter", "org.junit.jupiter", "junit-jupiter").versionRef("jupiter-api")
            library("jupiter-api", "org.junit.jupiter", "junit-jupiter-api").versionRef("jupiter-api")
            library("jupiter-engine", "org.junit.jupiter", "junit-jupiter-engine").versionRef("jupiter-api")
            library("jupiter-params", "org.junit.jupiter", "junit-jupiter-params").versionRef("jupiter-api")
            library("xjc-api", "javax.xml.bind", "jaxb-api").versionRef("jaxbVersion")
            library("xjc-runtime", "org.glassfish.jaxb", "jaxb-runtime").versionRef("jaxbVersion")
            library("xjc-jaxb", "org.glassfish.jaxb", "jaxb-xjc").versionRef("jaxbVersion")
            library("cms-uca-client", "tech.paramount.cms", "uca-client-core").versionRef("cmsUcaVersion")
            library("casl-jp-lib", "com.paramount.cms.arc", "casl-jsonpath-lib-core").versionRef("casljplibVersion")

            library("logbook", "org.zalando", "logbook-spring-boot-webflux-autoconfigure").versionRef("logbook")
            library("lombok", "org.projectlombok", "lombok").versionRef("lombok") // gradle platform is not recognizing bom version for annotation processors :/ https://github.com/gradle/gradle/issues/12519
            library("mockito-core", "org.mockito", "mockito-core").withoutVersion()
            library("modelmapper", "org.modelmapper", "modelmapper").versionRef("modelmapper")
            library("openapi-ui", "org.springdoc", "springdoc-openapi-ui").versionRef("openapi-ui")
            library("openapi-ui-webflux", "org.springdoc", "springdoc-openapi-webflux-ui").versionRef("openapi-ui")
            library("mysql", "com.mysql", "mysql-connector-j").versionRef("mysql-connector")
            library("rabbitmq-amqp", "com.rabbitmq", "amqp-client").withoutVersion()
            library("slf4j-api", "org.slf4j", "slf4j-api").versionRef("sl4j-api")
            library("spring-boot-bom", "org.springframework.boot", "spring-boot-dependencies").versionRef("spring-boot")
            library("spring-boot-amqp", "org.springframework.boot", "spring-boot-starter-amqp").withoutVersion()
            library("spring-boot-jdbc", "org.springframework.boot", "spring-boot-starter-jdbc").withoutVersion()
            library("spring-boot-validation", "org.springframework.boot", "spring-boot-starter-validation").withoutVersion()
            library("spring-boot-web", "org.springframework.boot", "spring-boot-starter-web").withoutVersion()
            library("spring-boot-webflux", "org.springframework.boot", "spring-boot-starter-webflux").withoutVersion()
            library("spring-boot-jpa", "org.springframework.boot", "spring-boot-starter-data-jpa").withoutVersion()
            library("spring-boot-starter", "org.springframework.boot", "spring-boot-starter").withoutVersion()
            library("spring-boot-mail", "org.springframework.boot", "spring-boot-starter-mail").withoutVersion()
            library("spring-boot-starter-logbook", "org.zalando", "logbook-spring-boot-starter").versionRef("logbook")
            library("spring-boot-starter-actuator", "org.springframework.boot", "spring-boot-starter-actuator").withoutVersion()
            library("spring-boot-starter-test", "org.springframework.boot", "spring-boot-starter-test").versionRef("spring-boot")
            library("spring-boot-starter-aop", "org.springframework.boot", "spring-boot-starter-aop").versionRef("spring-boot")
            library("spring-integration-ftp", "org.springframework.integration", "spring-integration-ftp").withoutVersion()
            library("spring-core", "org.springframework", "spring-core").versionRef("spring")
            library("spring-context", "org.springframework", "spring-context").versionRef("spring")
            library("spring-context-support", "org.springframework", "spring-context-support").versionRef("spring")
            library("spring-jdbc", "org.springframework", "spring-jdbc").versionRef("spring")
            library("spring-test", "org.springframework", "spring-test").versionRef("spring")
            library("spring-web", "org.springframework", "spring-web").versionRef("spring")
            library("testcontainers", "org.testcontainers", "testcontainers").versionRef("testcontainers")
            library("testcontainers-jupiter", "org.testcontainers", "junit-jupiter").versionRef("testcontainers")
            library("testcontainers-localstack", "org.testcontainers", "localstack").versionRef("testcontainers")
            library("testcontainers-postgres", "org.testcontainers", "postgresql").versionRef("testcontainers")
            library("viacom-aemops-json", "com.viacom.aemops", "aem-json-common-engine").versionRef("viacom-aemops")
            library("viacom-arcops-ucacrud", "com.viacom.arcops.uca", "arcops-ucacrud-processor").versionRef("viacom-arcops")
            library("reactor-tools", "io.projectreactor", "reactor-tools").withoutVersion()
            library("commons-io","commons-io", "commons-io").versionRef("commons-io")
            library("json","org.json", "json").versionRef("org.json")
            library("underscore","com.github.javadev", "underscore").versionRef("underscore")
            library("apache-poi","org.apache.poi", "poi").versionRef("apache-poi")
            library("apache-poiooxml","org.apache.poi", "poi-ooxml").versionRef("apache-poi")
            library("apache-commons-cli","commons-cli", "commons-cli").versionRef("commons-cli")
            library("spring-webflux","org.springframework.boot", "spring-boot-starter-webflux").withoutVersion()
            library("opencsv","com.opencsv", "opencsv").version("4.2")
        }
    }
}
